<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lyra</groupId>
	<artifactId>lyra-bus</artifactId>
	<version>0.1</version>
	<packaging>pom</packaging>
	<name>( Lyra Framework ) Lyra Service Bus</name>
	<modules>
		<module>util-comet</module>
		<module>meta-milieu</module>
		<module>meta-orb</module>
		<module>meta-pivot</module>
		<module>util-meteor</module>
		<module>db-star</module>
		<module>db-nebula</module>
		<module>db-planet</module>
		<module>sev-orbit</module>
		<module>sev-region</module>
		<module>sev-galaxy</module>
		<module>rest-nova</module>
	</modules>
	<properties>
		<!-- 项目默认使用的编码方式 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- 是否启用pullInDeps选项，如果该值的选项为true则在mod.json的includes以及deploys中包含的Module会在打包的时候自动发布到当前Module的依赖模块中 
			也就是说不需要在运行时再执行依赖的Module的安装和下载，会直接将这些依赖的库打包到当前的Module中直接运行 -->
		<vertx.pullInDeps>false</vertx.pullInDeps>

		<!-- 这个值设置成true过后，则可以创建能执行的Fat jar的包，这个包可以通过java -jar <jarname>的命令执行 -->
		<vertx.createFatJar>false</vertx.createFatJar>

		<!-- Vertx 模块的标准标识，其标识符必须符合Identifier的规范<Owner>~<Name>~<Version> -->
		<module.name>${project.groupId}~${project.artifactId}~${project.version}</module.name>

		<!-- 配置的这个目录将会包含assembled嵌入式的Mod信息，这个配置也会在命令中北-Dmods.directory=<mydir>的参数覆盖掉 -->
		<mods.directory>target/mods</mods.directory>

		<!-- 依赖的库的版本号 -->
		<!-- 【Latest】Vert.X库的版本 -->
		<vertx.version>2.1.5</vertx.version>
		<!-- 【Latest】Vert.X的单元测试库的版本 -->
		<vertx.testtools.version>2.0.3-final</vertx.testtools.version>
		<!-- 【Latest】JUnit的版本号 -->
		<junit.version>4.12</junit.version>
		<!-- 【Latest】JDK的编译和运行版本号：Vert.X要求最低版本是1.7 -->
		<jdk.version>1.7</jdk.version>
		<ajc.version>1.7</ajc.version>
		<!-- 【Latest】Jackson序列化系统，用于处理Json建模文件 -->
		<jackson.version>2.4.3</jackson.version>
		<!-- 【Latest】BoneCP连接池版本 -->
		<bonecp.version>0.8.0.RELEASE</bonecp.version>
		<druid.version>1.0.9</druid.version>
		<!-- 【Latest】Spring的版本 -->
		<spring.version>4.1.4.RELEASE</spring.version>
		<!-- Slf4j日志器版本 -->
		<slf4j.version>1.7.5</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		<!-- DBF JDBC Driver -->
		<jdbc.oracle.version>11.2.0.2.0</jdbc.oracle.version><!-- 12.1.0s -->
		<jdbc.pgsql.version>9.3-1102-jdbc41</jdbc.pgsql.version>
		<jdbc.mssql.version>4.0</jdbc.mssql.version>
		<jdbc.mysql.version>5.1.9</jdbc.mysql.version>
		<!-- English Town -->
		<et.whenjava.version>2.0.0</et.whenjava.version>
		<jersey.version>2.13</jersey.version>
		<guice.version>3.0</guice.version>
		<guice.bridge.version>2.3.0-b10</guice.bridge.version>
		<mockito.version>1.9.5</mockito.version>
		<asm.version>3.3.1</asm.version>
		<!-- Object validation -->
		<oval.version>1.84</oval.version>
		<!-- AspectJ Version -->
		<aspectj.version>1.7.3</aspectj.version>
		<aspectj.compile.file>aopaj.properties</aspectj.compile.file>
		<aspectj.test.file>aopaj-test.properties</aspectj.test.file>

		<!--Plugin versions -->
		<!-- 【Latest】Maven代码编译插件版本 -->
		<maven.compiler.plugin.version>3.2</maven.compiler.plugin.version>
		<!-- 【Latest】Maven的资源编译插件的版本 -->
		<maven.resources.plugin.version>2.7</maven.resources.plugin.version>
		<!-- 【Latest】VertX的Maven插件版本 -->
		<maven.vertx.plugin.version>2.0.11-final</maven.vertx.plugin.version>
		<!-- 【Latest】Maven处理Dependency的库的插件版本 -->
		<maven.dependency.plugin.version>2.9</maven.dependency.plugin.version>
		<!-- 【Latest】AspectJ Compiler -->
		<maven.mojo.aspectj.version>1.7</maven.mojo.aspectj.version>

		<maven.surefire.plugin.version>2.18.1</maven.surefire.plugin.version>
		<maven.emma.plugin.version>1.0-alpha-3</maven.emma.plugin.version>
		<maven.clover2.plugin.version>4.0.2</maven.clover2.plugin.version>
		<maven.cobertura.plugin.version>2.6</maven.cobertura.plugin.version>
		<maven.jdee.plugin.version>1.1</maven.jdee.plugin.version>
		<!-- 【Latest】Maven的JXR插件使用的版本 <maven.jxr.plugin.version>2.4</maven.jxr.plugin.version> 
			【Latest】Maven处理Clean Up插件的版本 <maven.clean.plugin.version>2.5</maven.clean.plugin.version> 
			【Latest】Surefire的插件版本 <maven.surefire.plugin.version>2.14</maven.surefire.plugin.version> 
			【Latest】Failsafe的插件版本 <maven.failsafe.plugin.version>2.14</maven.failsafe.plugin.version> 
			【Latest】Surefire Report的插件版本 <maven.surefire.report.plugin.version>2.14</maven.surefire.report.plugin.version> 
			【Latest】Java Documentation的插件版本 <maven.javadoc.plugin.version>2.9.1</maven.javadoc.plugin.version> 
			【1.7.7】Maven中的Avro插件 <maven.avro.plugin.version>1.7.4</maven.avro.plugin.version> -->
	</properties>
	<!-- 特殊的Repository配置，因为VertX比较新，所以使用这个库可以使得依赖的jar的包可以顺利从Repository中直接获取 -->
	<!-- <repositories> <repository> <id>sonatype-nexus-snapshots</id> <url>https://oss.sonatype.org/content/repositories/snapshots</url> 
		</repository> </repositories> -->
	<dependencies>
		<!-- Object Validation -->
		<dependency>
			<groupId>net.sf.oval</groupId>
			<artifactId>oval</artifactId>
			<version>${oval.version}</version>
		</dependency>
		<!-- AspectJ Runtime -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<!--Test Dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
		</dependency>
		<!-- Spring Test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- Other plugins required by the build -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<!-- Maven Resource Plugin -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-mod-to-target</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${mods.directory}/${module.name}</outputDirectory>
							<resources>
								<resource>
									<directory>target/classes</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Maven Dependency Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-mod-dependencies-to-target</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${mods.directory}/${module.name}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-mod-dependencies-to-target-dependencies</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/dependencies</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- AJDT Compile -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>${maven.mojo.aspectj.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<complianceLevel>${ajc.version}</complianceLevel>
					<source>${ajc.version}</source>
					<target>${ajc.version}</target>
				</configuration>
				<executions>
					<execution>
						<id>compile</id>
						<configuration>
							<ajdtBuildDefFile>src/main/resources/${aspectj.compile.file}</ajdtBuildDefFile>
						</configuration>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>test-compile</id>
						<configuration>
							<ajdtBuildDefFile>src/main/resources/${aspectj.test.file}</ajdtBuildDefFile>
						</configuration>
						<goals>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>emma-maven-plugin</artifactId>
				<version>${maven.emma.plugin.version}</version>
				<executions>
					<execution>
						<id>instrument</id>
						<goals>
							<goal>instrument</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<skipTests>false</skipTests>
					<junitArtifactName>junit:junit</junitArtifactName>
					<includes>
						<include>**/*TestCase.java</include>
					</includes>
					<reportsDirectory>target/test-report</reportsDirectory>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>${maven.surefire.plugin.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.8,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<!-- Deployment需要的配置 -->
	<distributionManagement>
		<repository>
			<id>nexus-releases</id>
			<name>Nexus Release Repository</name>
			<url>http://61.186.153.73:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<name>Nexus Snapshot Repository</name>
			<url>http://61.186.153.73:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
</project>